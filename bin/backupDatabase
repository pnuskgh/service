#!/bin/bash
### ================================================================================================
###     프로그램 명      		: backupDatabase, Version 0.00.003
###     프로그램 설명   		: Database를 백업 합니다.
###     작성자            		: 산사랑 (pnuskgh@gmail.com, www.jopenbusiness.com)
###     작성일          		: 2002.07.15 ~ 2013.05.16
### ----[History 관리]------------------------------------------------------------------------------
###     수정자          		:
###     수정일          		:
###     수정 내용      		:
### --- [Copyright] ------------------------------------------------------------
###     Copyright (c) 1995~2013 pnuskgh, 오픈소스 비즈니스 컨설팅
###     All rights reserved.
### ================================================================================================

###---  Script 환경 설정
. ${CONFIG_DIR}/config.bash > /dev/null 2>&1
. ${BIN_DIR}/utilCommon.bash

### ----------------------------------------------------------------------------
###     funcUsing()
###			사용법 표시
### ----------------------------------------------------------------------------
funcUsing() {
    /bin/echo "Using : backupDatabase INSTANCE DATABASE USER PASSWORD [OPTION]"
    /bin/echo "        INSTANCE       : Instance"
    /bin/echo "        DATABASE       : Database"
    /bin/echo "        USER           : Database 사용자"
    /bin/echo "        PASSWORD       : Database 사용자의 암호"
    /bin/echo "        OPTION         : Backup Option"
    /bin/echo " "
  	exit 1
}

###---  올바른 서버에서 실행되고 있는지 확인한다.
funcCheckServer ${SERVER_DATABASE1} ${SERVER_DATABASE2} ${SERVER_DATABASE3} ${SERVER_DATABASE4} ${SERVER_DATABASE5}
if [[ "$?" -gt "0" ]]; then
	exit $?
fi

###---  Command Line에서 입력된 인수를 검사한다.
if [[ $# = 4 ]]; then
	PASSWORD=$4
elif [[ $# = 5 ]]; then
	PASSWORD=$4
	OPTION=ext
else
	funcUsing
fi
INSTANCE=$1
DATABASE=$2
USER=$3

### ----------------------------------------------------------------------------
###     Main process
### ----------------------------------------------------------------------------
/bin/echo "Backup Database : " ${DATABASE}
/bin/mkdir ${BACKUP_DIR} > /dev/null 2>&1
/bin/mkdir ${BACKUP_DIR}/${INSTANCE} > /dev/null 2>&1
if [[ ${OPTION} = "ext" ]]; then
  	/usr/bin/mysqldump -u${USER} -p${PASSWORD} --lock-tables=false ${DATABASE} > ${BACKUP_DIR}/${INSTANCE}/${INSTANCE}_${TIMESTAMP}.sql
  	### /usr/bin/mysqldump -u${USER} -p${PASSWORD} --single-transaction ${DATABASE} > ${BACKUP_DIR}/${INSTANCE}/${INSTANCE}_${TIMESTAMP}.sql
else
	/usr/bin/mysqldump -u${USER} -p${PASSWORD} ${DATABASE} > ${BACKUP_DIR}/${INSTANCE}/${INSTANCE}_${TIMESTAMP}.sql
fi

if [[ "$?" -gt "0" ]]; then
	exit $?
fi

### /usr/bin/clear
/bin/echo "--------------------------------------------------"
/bin/echo "Backup folder : " ${BACKUP_DIR}/${INSTANCE}
/bin/echo "Backup datetime : " ${TIMESTAMP}
/bin/echo " "

/bin/ls -alF ${BACKUP_DIR}/${INSTANCE}/*${TIMESTAMP}.*
exit 0

### ============================================================================
